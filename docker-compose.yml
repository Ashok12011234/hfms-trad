version: "3"

networks:
  mynetwork:
    name: mynetwork
    driver: bridge

services:
  
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy
    ports:
      - "8000:8000"
    command:
      - --http-address
      - :8000
      - --upstream
      - http://nginx:80,http://api:3002/requests 
    environment:
      OAUTH2_PROXY_CLIENT_ID: "880386795823-olrdr7047el8skubcoaa02avc13lql6b.apps.googleusercontent.com"
      OAUTH2_PROXY_CLIENT_SECRET: "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"
      OAUTH2_PROXY_COOKIE_SECRET: 5S5wk5A5O6MkKfZZ
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:8000/oauth2/callback"
      OAUTH2_PROXY_OIDC_ISSUER_URL: "https://accounts.google.com"
      OAUTH2_PROXY_SCOPE: openid email
      OAUTH2_PROXY_SKIP_AUTH_REGEX: /hospitalDashoard.php,/assets/*
      OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: true
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: true
      OAUTH2_PROXY_PASS_BASIC_AUTH: true
      OAUTH2_PROXY_PASS__AUTHORIZATION_HEADER: true
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
  
    networks:
      - mynetwork
    
      
  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: hfms
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
      MYSQL_TCP_PORT: 3306
      
    networks:
      - mynetwork
    expose:
      - 3306
    volumes:
      - ./queries.sql:/queries.sql
    command: ["--init-file", "/queries.sql"]
  
  admin:    
    image: adminer    
    ports:      
      - "8080:8080"
    networks:
      - mynetwork

  nginx:
    container_name: nginx
    image: nginx:1.23.3-alpine
    expose:
      - 80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./server:/var/www
    links:
      - server
    networks:
      - mynetwork

  server:
    container_name: server
    build: ./server
    environment:
      HOST: db
      PORT: 3306
      USERNAME: user
      PASSWORD: pass
      DATABASE: hfms
      URL: 'http://oauth2-proxy:8000'
    working_dir: /var/www
    volumes:
      - ./server:/var/www
    networks:
      - mynetwork
    depends_on:
      - db

  api:
    build: ./api
    environment:
      HOST: db
      PORT: 3306
      USERNAME: user
      PASSWORD: pass
      DATABASE: hfms
    expose:
      - 3002
    networks:
      - mynetwork
    depends_on:
      - db  
      