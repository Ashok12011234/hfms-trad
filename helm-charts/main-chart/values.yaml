hfms-server:
  image:
    repository: ashok1201/hfms-server
    pullPolicy: IfNotPresent
    tag: "1.1"

  fullnameOverride: "hfms-server"

  service:
    type: ClusterIP
    port: 9000
  
  env:
    HOST : hfms-db
    PORT : 3306
    USERNAME : root
    PASSWORD : pass
    DATABASE : hfms
    URL : http://hfms-proxy.hfms.svc.cluster.local:4443
    SERVER_PATH: /Users/ashokkumar/Desktop/HFMS-TRAD/server
  
  nginx:
    image:
      repository: nginx
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "latest"

    fullnameOverride: "hfms-nginx"

    service:
      type: ClusterIP
      port: 80

    env : 
      CONFIG_PATH: /Users/ashokkumar/Desktop/HFMS-TRAD/helm-charts/nginx.conf
      SERVER_PATH: /Users/ashokkumar/Desktop/HFMS-TRAD/server

hfms-api:
  image:
    repository: ashok1201/hfms-api
    pullPolicy: IfNotPresent
    tag: "latest"

  fullnameOverride: "hfms-api"

  service:
    type: ClusterIP
    port: 3002
  
  env:
    HOST : hfms-db
    PORT : 3306
    USERNAME : root
    PASSWORD : pass
    DATABASE : hfms
  
hfms-db:
  image:
    repository: mysql
    pullPolicy: IfNotPresent
    tag: "latest"

  fullnameOverride: "hfms-db"

  service:
    type: ClusterIP
    port: 3306

  env:
    MYSQL_ROOT_PASSWORD: pass
    MYSQL_DATABASE: hfms
    MYSQL_USER: user
    MYSQL_PASSWORD: pass
    MYSQL_TCP_PORT: 3306

hfms-admin:
  image:
    repository: adminer
    pullPolicy: IfNotPresent
    tag: "latest"
    
  fullnameOverride: "hfms-admin"

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    className: "nginx"
    annotations: {}
    hosts:
      - host: hfms.admin.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: 
      - secretName: tls-cert-hfms-admin
        hosts:
          - hfms.admin.com

oauth2-proxy:
  image:
    repository: "quay.io/oauth2-proxy/oauth2-proxy"
    tag: ""
    pullPolicy: "IfNotPresent"

  fullnameOverride: "hfms-proxy"

  # Oauth client configuration specifics
  config:
    # Add config annotations
    annotations: {}
    # OAuth client ID
    clientID: ""
    # OAuth client secret
    clientSecret: ""
 
    cookieSecret: "5S5wk5A5O6MkKfZZ"
  
    cookieName: "oauth2_proxy"
    
    configFile: |-
      email_domains = [ "*" ]
      upstreams = [
      "http://hfms-nginx.hfms.svc.cluster.local:80",
      "http://hfms-api.hfms.svc.cluster.local:3002/requests"]
      provider = "oidc"
      provider_display_name="Asgardeo"
      reverse_proxy = false
      redirect_url = "https://sample-app.local/oauth2/callback"
      oidc_issuer_url = ""
      scope= "openid email"
      skip_auth_regex="/hospitalDashboard.php,/assets/*"
      skip_provider_button=true
      pass_access_token=true
      pass_authorization_header=true
      pass_basic_auth=true
      pass_user_headers=true

  service:
    type: ClusterIP
    portNumber: 4443
    appProtocol: http
  
  ingress:
    enabled: true
    className: nginx
    path: /
    # Only used if API capabilities (networking.k8s.io/v1) allow it
    pathType: ImplementationSpecific
    # Used to create an Ingress record.
    hosts:
      - sample-app.local
    labels: {}
    tls: 
      - secretName: tls-cert-spa-app
        hosts:
          - sample-app.local